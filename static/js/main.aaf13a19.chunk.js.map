{"version":3,"sources":["components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/users.ts","App.tsx","api/todos.ts","index.tsx"],"names":["UserInfo","user","name","email","className","href","TodoInfo","todo","id","title","completed","classNames","TodoList","todos","map","username","getUserById","userId","usersFromServer","find","modifiedTodos","App","useState","setTodos","setTitle","setUserId","isTitleError","setIsTitleError","isUserIdError","setIsUserIdError","isTitleErrorValidation","setIsTitleErrorValidation","action","method","onSubmit","event","preventDefault","valid","test","length","trim","newTodo","Math","max","addNewTodo","type","placeholder","value","onChange","e","target","Number","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.aaf13a19.chunk.js","sourcesContent":["import { User } from '../../types/User';\n\ntype Props = {\n  user: User\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  const { name, email } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  todo : Todo;\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const {\n    id,\n    title,\n    completed,\n    user,\n  } = todo;\n\n  return (\n    <article\n      data-id={id}\n      className={\n        classNames(\n          'TodoInfo',\n          completed && 'TodoInfo--completed',\n        )\n      }\n    >\n      <h2 className=\"TodoInfo__title\">{title}</h2>\n\n      {user && <UserInfo user={user} />}\n    </article>\n  );\n};\n","import { TodoInfo } from '../TodoInfo';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[];\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map(todo => (\n        <TodoInfo todo={todo} key={todo.id} />\n      ))}\n    </section>\n  );\n};\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import { useState } from 'react';\n\nimport './App.scss';\nimport { TodoList } from './components/TodoList';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\n\nimport { User } from './types/User';\nimport { Todo } from './types/Todo';\n\nfunction getUserById(userId: number): User | null {\n  const foundUser = usersFromServer.find(user => user.id === userId);\n\n  return foundUser || null;\n}\n\nexport const modifiedTodos: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUserById(todo.userId),\n}));\n\nexport const App = () => {\n  const [todos, setTodos] = useState(modifiedTodos);\n  const [title, setTitle] = useState('');\n  const [userId, setUserId] = useState(0);\n  const [isTitleError, setIsTitleError] = useState(false);\n  const [isUserIdError, setIsUserIdError] = useState(false);\n  const [isTitleErrorValidation, setIsTitleErrorValidation] = useState(false);\n\n  const addNewTodo = () => {\n    const uniqueId = Math.max(...todos.map(todo => todo.id)) + 1;\n\n    const newTodo = {\n      id: uniqueId,\n      title,\n      userId,\n      completed: false,\n      user: getUserById(userId),\n    };\n\n    setTodos([...todos, newTodo]);\n  };\n\n  const clearForm = () => {\n    setTitle('');\n    setUserId(0);\n  };\n\n  const handleTitleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(e.target.value);\n    setIsTitleError(false);\n  };\n\n  const handleUserChange = (e: React.ChangeEvent<HTMLSelectElement>) => {\n    setUserId(Number(e.target.value));\n    setIsUserIdError(false);\n  };\n\n  const handleFormSubmit = (event: React.ChangeEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    const re = /^[A-Za-z1-9\\s]*$/;\n    const valid = re.test(title);\n\n    if (title.length === 0) {\n      setIsTitleError(true);\n    }\n\n    if (!title.trim()) {\n      setIsTitleError(true);\n    }\n\n    if (!valid) {\n      setIsTitleErrorValidation(true);\n    }\n\n    if (!userId) {\n      setIsUserIdError(true);\n    }\n\n    if (title.trim() && userId && valid) {\n      addNewTodo();\n      clearForm();\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1 className=\"title\">Add todo form</h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={handleFormSubmit}\n      >\n        <div className=\"field\">\n          <label\n            className=\"label\"\n          >\n            Title:&nbsp;\n            <input\n              className=\"input\"\n              type=\"text\"\n              data-cy=\"titleInput\"\n              placeholder=\"Enter a title\"\n              name=\"title\"\n              value={title}\n              onChange={handleTitleChange}\n            />\n          </label>\n\n          {isTitleError && <span className=\"error\">Please enter a title</span>}\n\n          {isTitleErrorValidation && (\n            <span className=\"error\">\n              Only letters, digits and spaces are allowed\n            </span>\n          )}\n        </div>\n\n        <div className=\"field\">\n          <label className=\"field__label\">\n            User:&nbsp;\n            <select\n              className=\"select\"\n              data-cy=\"userSelect\"\n              name=\"user\"\n              value={userId}\n              onChange={handleUserChange}\n            >\n              <option value=\"0\" disabled>Choose a user</option>\n              {usersFromServer.map(user => (\n                <option key={user.id} value={user.id}>{user.name}</option>\n              ))}\n            </select>\n\n            {isUserIdError && (\n              <span className=\"error\">Please choose a user</span>\n            )}\n          </label>\n        </div>\n\n        <button\n          className=\"button\"\n          type=\"submit\"\n          data-cy=\"submitButton\"\n        >\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}