{"version":3,"sources":["components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/users.ts","App.tsx","api/todos.ts","index.tsx"],"names":["UserInfo","user","name","email","className","href","TodoInfo","todo","id","title","completed","classNames","TodoList","todos","map","username","getUserById","userId","usersFromServer","find","modifiedTodos","App","useState","setTodos","setTitle","setUserId","titleError","setTitleError","userIdError","setUserIdError","titleErrorValidation","setTitleErrorValidation","action","method","onSubmit","event","preventDefault","valid","test","length","newTodo","Math","max","addNewTodo","type","placeholder","value","onChange","e","target","titleHandler","Number","userHandler","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0ddb8850.chunk.js","sourcesContent":["import { User } from '../../types/User';\n\ntype Props = {\n  user: User\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  const { name, email } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  todo : Todo;\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const {\n    id, title, completed, user,\n  } = todo;\n\n  return (\n    <article\n      data-id={id}\n      className={\n        classNames(\n          'TodoInfo',\n          completed && 'TodoInfo--completed',\n        )\n      }\n    >\n      <h2 className=\"TodoInfo__title\">{title}</h2>\n\n      {user\n        && <UserInfo user={user} />}\n\n    </article>\n  );\n};\n","import { TodoInfo } from '../TodoInfo';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[];\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map(todo => (\n        <TodoInfo todo={todo} key={todo.id} />\n      ))}\n    </section>\n  );\n};\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import { useState } from 'react';\n\nimport './App.scss';\nimport { TodoList } from './components/TodoList';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\n\nimport { User } from './types/User';\nimport { Todo } from './types/Todo';\n\nfunction getUserById(userId: number): User | null {\n  const foundUser = usersFromServer.find(user => user.id === userId);\n\n  return foundUser || null;\n}\n\nexport const modifiedTodos: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUserById(todo.userId),\n}));\n\nexport const App = () => {\n  const [todos, setTodos] = useState(modifiedTodos);\n  const [title, setTitle] = useState('');\n  const [userId, setUserId] = useState(0);\n  const [titleError, setTitleError] = useState(false);\n  const [userIdError, setUserIdError] = useState(false);\n  const [titleErrorValidation, setTitleErrorValidation] = useState(false);\n\n  const addNewTodo = () => {\n    const uniqueId = Math.max(...todos.map(todo => todo.id)) + 1;\n\n    const newTodo = {\n      id: uniqueId,\n      title,\n      userId,\n      completed: false,\n      user: getUserById(userId),\n    };\n\n    setTodos([...todos, newTodo]);\n  };\n\n  const clearForm = () => {\n    setTitle('');\n    setUserId(0);\n  };\n\n  const titleHandler = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(e.target.value);\n    setTitleError(false);\n  };\n\n  const userHandler = (e: React.ChangeEvent<HTMLSelectElement>) => {\n    setUserId(Number(e.target.value));\n    setUserIdError(false);\n  };\n\n  const handleFormSubmit = (event: React.ChangeEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    const re = /^[A-Za-z1-9\\s]*$/;\n    const valid = re.test(title);\n\n    if (title.length === 0) {\n      setTitleError(true);\n    }\n\n    if (!valid) {\n      setTitleErrorValidation(true);\n    }\n\n    if (!userId) {\n      setUserIdError(true);\n    }\n\n    if (title && valid && userId) {\n      addNewTodo();\n      clearForm();\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={handleFormSubmit}\n      >\n        <div className=\"field\">\n          <label>\n            Title:&nbsp;\n            <input\n              type=\"text\"\n              data-cy=\"titleInput\"\n              placeholder=\"Enter a title\"\n              name=\"title\"\n              value={title}\n              onChange={e => titleHandler(e)}\n            />\n          </label>\n\n          {titleError && <span className=\"error\">Please enter a title</span>}\n          {titleErrorValidation\n            && (\n              <span className=\"error\">\n                Only letters, digits and spaces are allowed\n              </span>\n            )}\n\n        </div>\n\n        <div className=\"field\">\n          <label>\n            User:&nbsp;\n            <select\n              data-cy=\"userSelect\"\n              name=\"user\"\n              value={userId}\n              onChange={e => userHandler(e)}\n            >\n              <option value=\"0\" disabled>Choose a user</option>\n              {usersFromServer.map(user => (\n                <option key={user.id} value={user.id}>{user.name}</option>\n              ))}\n            </select>\n\n            {userIdError && <span className=\"error\">Please choose a user</span>}\n          </label>\n        </div>\n\n        <button\n          type=\"submit\"\n          data-cy=\"submitButton\"\n        >\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}